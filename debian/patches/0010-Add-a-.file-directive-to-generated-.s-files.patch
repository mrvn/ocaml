From: Stephane Glondu <steph@glondu.net>
Date: Sun, 16 Aug 2015 20:59:14 +0200
Subject: Add a .file directive to generated .s files

When no .file directive is given, the toolchain records the filename
of the .o file, which is sometimes random, making generated objects
non-deterministic.

We use Location.input_name for adding .file directives to assembly
files. Note: when the file is preprocessed, this reference holds the
name of the temporary file. Hence, files compiled with -pp are still
not deterministic.

Bug-Debian: https://bugs.debian.org/795784
Bug-Debian: https://bugs.debian.org/796336
---
 asmcomp/amd64/emit.mlp | 1 +
 asmcomp/arm/emit.mlp   | 1 +
 asmcomp/arm64/emit.mlp | 1 +
 asmcomp/i386/emit.mlp  | 1 +
 asmcomp/power/emit.mlp | 1 +
 asmcomp/sparc/emit.mlp | 1 +
 6 files changed, 6 insertions(+)

Index: ocaml.git/asmcomp/arm/emit.mlp
===================================================================
--- ocaml.git.orig/asmcomp/arm/emit.mlp
+++ ocaml.git/asmcomp/arm/emit.mlp
@@ -895,7 +895,7 @@ let data l =
 
 let begin_assembly() =
   reset_debug_info();
-  `	.file	\"\"\n`;  (* PR#7037 *)
+  `	.file \"{emit_string (String.escaped !Location.input_name)}\"\n`; (* PR#7037 *)
   `	.syntax	unified\n`;
   begin match !arch with
   | ARMv4   -> `	.arch	armv4t\n`
Index: ocaml.git/asmcomp/arm64/emit.mlp
===================================================================
--- ocaml.git.orig/asmcomp/arm64/emit.mlp
+++ ocaml.git/asmcomp/arm64/emit.mlp
@@ -946,7 +946,7 @@ let data l =
 
 let begin_assembly() =
   reset_debug_info();
-  `	.file	\"\"\n`;  (* PR#7037 *)
+  `	.file \"{emit_string (String.escaped !Location.input_name)}\"\n`; (* PR#7037 *)
   let lbl_begin = Compilenv.make_symbol (Some "data_begin") in
   `	.data\n`;
   `	.globl	{emit_symbol lbl_begin}\n`;
Index: ocaml.git/asmcomp/i386/emit.mlp
===================================================================
--- ocaml.git.orig/asmcomp/i386/emit.mlp
+++ ocaml.git/asmcomp/i386/emit.mlp
@@ -1012,6 +1012,7 @@ let begin_assembly() =
   X86_proc.reset_asm_code ();
   reset_debug_info();                   (* PR#5603 *)
   float_constants := [];
+  `	.file \"{emit_string (String.escaped !Location.input_name)}\"\n`;
   if system = S_win32 then begin
     D.mode386 ();
     D.model "FLAT";
Index: ocaml.git/asmcomp/power/emit.mlp
===================================================================
--- ocaml.git.orig/asmcomp/power/emit.mlp
+++ ocaml.git/asmcomp/power/emit.mlp
@@ -1135,7 +1135,7 @@ let data l =
 
 let begin_assembly() =
   reset_debug_info();
-  `	.file	\"\"\n`;  (* PR#7037 *)
+  `	.file \"{emit_string (String.escaped !Location.input_name)}\"\n`; (* PR#7037 *)
   begin match abi with
   | ELF64v2 -> `	.abiversion 2\n`
   | _ -> ()
Index: ocaml.git/asmcomp/sparc/emit.mlp
===================================================================
--- ocaml.git.orig/asmcomp/sparc/emit.mlp
+++ ocaml.git/asmcomp/sparc/emit.mlp
@@ -740,6 +740,7 @@ let data l =
 (* Beginning / end of an assembly file *)
 
 let begin_assembly() =
+  `	.file \"{emit_string (String.escaped !Location.input_name)}\"\n`;
   let lbl_begin = Compilenv.make_symbol (Some "data_begin") in
   `	.data\n`;
   `	.global	{emit_symbol lbl_begin}\n`;
